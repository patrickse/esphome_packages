# Template for setting up powerplugs using esphome

substitutions:
  name: "powerplug-template"
  friendly_name: "Powerplug Template"

  # Higher value gives lower watt readout
  current_res: "0.00280"
  # Lower value gives lower voltage readout
  voltage_div: "775"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: true

  project:
    name: esphome.ps.powerplug
    version: "1.0"

esp8266:
  board: esp01_1m

logger:
api:
ota:
  platform: esphome

dashboard_import:
  package_import_url: github://...
  import_full_config: false

wifi:
  ap:
    password: 123456

captive_portal:

text_sensor:
  - platform: version
    name: "${devicename} - Version"
    icon: mdi:cube-outline

binary_sensor:
  - platform: status
    name: "${devicename} - Status"
    device_class: connectivity

  # toggle relay on/off
  - platform: gpio
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: True
    id: "${devicename}_button_state"
    on_press:
      - switch.toggle: button_switch

# see: https://esphome.io/components/time.html
time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  - platform: wifi_signal
    name: "${devicename} - Wifi Signal"
    update_interval: 60s
    icon: mdi:wifi

  - platform: uptime
    name: "${devicename} - Uptime"
    update_interval: 60s
    icon: mdi:clock-outline

  - platform: total_daily_energy
    name: "${devicename} - Todays Usage"
    power_id: "power_wattage"
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:calendar-clock

  - platform: adc
    pin: VCC
    name: "${devicename} - VCC Volt"
    icon: mdi:flash-outline

  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: GPIO04
    change_mode_every: 4
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    update_interval: 3s

    current:
      name: "${devicename} - Ampere"
      unit_of_measurement: A
      accuracy_decimals: 3
      icon: mdi:current-ac

    voltage:
      name: "${devicename} - Volt"
      unit_of_measurement: V
      accuracy_decimals: 1
      icon: mdi:flash-outline

    power:
      name: "${devicename} - Watt"
      unit_of_measurement: W
      id: "power_wattage"
      icon: mdi:gauge
      filters:
        - calibrate_linear:
          - 0.0 -> 0.7
          - 18.3 -> 27.0
          - 19.9 -> 29.0
          - 20.3 -> 30.0
          - 21.1 -> 30.7
        - lambda: if (x < (1 + 0.7)) return 0; else return (x - 0.7);
          

light:
  - platform: status_led
    name: "Status LED"
    pin: GPIO02
    id: led_blue

#output:
#  - platform: gpio
#    pin: GPIO00
#    inverted: true
#    id: led_red

switch:
  - platform: template
    name: "${devicename} - Switch"
    icon: mdi:power
    optimistic: true
    id: button_switch
    turn_on_action:
      - switch.turn_on: relay
      - light.turn_off: led_blue
    turn_off_action:
      - switch.turn_off: relay
      - light.turn_on: led_blue
  - platform: gpio
    pin: GPIO15
    id: relay